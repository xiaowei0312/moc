package com.sram.controller.moc;

import org.apache.log4j.Logger;

import java.util.List;
import java.util.Map;

import javax.annotation.Resource;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import com.sram.entity.Member;
import com.sram.entity.Testpaper;
import com.sram.entity.TestpaperResult;
import com.sram.Constants.TestpaperType;
import com.sram.entity.GeneratorStrategy;
import com.sram.entity.Question;
import com.sram.service.GeneratorStrategyService;
import com.sram.service.OutlineCategoryService;
import com.sram.service.QuestionService;
import com.sram.service.TestpaperChapterService;
import com.sram.service.TestpaperResultService;
import com.sram.service.TestpaperService;
/**
 * 前台考试
 * @author Administrator
 *
 */
@Controller("mocQuestionController")
@RequestMapping("/moc/question")
public class QuestionController extends BaseController{
	/**
	 * Logger for this class
	 */
	private static final Logger logger = Logger.getLogger(QuestionController.class);

	@Autowired 
	private QuestionService questionService;
	@Autowired
	private GeneratorStrategyService generatorStrategyService;
	@Autowired
	private OutlineCategoryService outlineCategoryService;
	@Resource(name="testpaperServiceImpl")
	private TestpaperService testpaperService;
	@Resource(name="testpaperChapterServiceImpl")
	private TestpaperChapterService testpaperChapterService;
	@Resource(name="testpaperResultServiceImpl")
	private TestpaperResultService testpaperResultService;
	
	/**
	 * <p>功能:智能练习and考点专项练习</p> 
	 * @author 杨楷
	 * @date 2015-3-26 下午05:43:03 
	 * @param modelMap
	 * @param testpaperType
	 * @param outlineCategoryId
	 * @return
	 */
	@RequestMapping(value = "/exercise")
	public String exercise(ModelMap modelMap,TestpaperType testpaperType,Long outlineCategoryId){
		Long rootOutlineCategoryId=outlineCategoryId;
		if (testpaperType==TestpaperType.specialexercis) {
			rootOutlineCategoryId=outlineCategoryService.find(outlineCategoryId).getParent().getId();
		}
		//查找对应大纲的策略
		List<GeneratorStrategy> generatorStrategys = generatorStrategyService.findByOutlineCategoryId(rootOutlineCategoryId);
		if (generatorStrategys==null||generatorStrategys.size()==0) {
			generatorStrategyService.findByOutlineCategoryId(-1l);
		}
		GeneratorStrategy strategy=generatorStrategys.get(0).getTestpaperType()==TestpaperType.intellexercise?generatorStrategys.get(0):generatorStrategys.get(1);
		Testpaper testpaper = this.questionService.getQuestion(outlineCategoryId,strategy,testpaperType);
//		logger.error(JSON.toJSONString(testpaper,true));
		Testpaper testpaper2 = testpaperService.saveAutoGeneratedTestpaper(testpaper);
		modelMap.addAttribute("testpaper",testpaper2);
		return "/moc/question/examIntelligence";
	}
	@RequestMapping(value = "/genrationExam")
	public String genrationExam(ModelMap modelMap,Long outlineCategoryId){
		//查找对应大纲的策略
		GeneratorStrategy strategy = generatorStrategyService.findByOutlineCategoryId(outlineCategoryId, TestpaperType.genrationexam);
		if (strategy==null) {
			strategy=generatorStrategyService.findByOutlineCategoryId(null, TestpaperType.genrationexam);
		}
		Testpaper testpaper = testpaperService.getTestpaper(outlineCategoryId, strategy);
		testpaperService.saveAutoGeneratedTestpaper(testpaper);
		return "/moc/question/examIntelligence";
	}
	
	/**
	 * 真题试卷列表
	 */
	@RequestMapping(value = "/oldexamList", method = RequestMethod.POST)
	public String list(ModelMap model,Long outlineCategoryID,Long areaID,Integer page) {
		model.addAttribute("testpapers",testpaperService.findOldexamList(outlineCategoryID, areaID,page));
		return "/moc/question/oldexamList";
	}
	/**
	 * 真题试卷总数
	 */
	@RequestMapping(value = "/oldexamCount", method = RequestMethod.POST)
	@ResponseBody
	public Long count(Long outlineCategoryID,Long areaID) {
		return testpaperService.findOldexamCount(outlineCategoryID, areaID);
	}
	/**
	 * 真题试卷练习
	 */
	@RequestMapping(value = "/oldexam", method = RequestMethod.GET)
	public String exam(ModelMap model,Long testpaperID) {
		Testpaper testpaper = testpaperService.find(testpaperID);
		model.addAttribute("testpaper",testpaper);
		model.addAttribute("testpaperChapters",testpaperChapterService.findTestpaperChapterListByTestpaperId(testpaperID));
		Member currentMember = super.currentMember();
		TestpaperResult testpaperResult = new TestpaperResult();
		testpaperResult.setUserId(currentMember.getId());//做卷人
		testpaperResult.setTestpaper(testpaper);//试卷ID
		testpaperResult.setPaperName(testpaper.getName());//试卷名字
		testpaperResultService.save(testpaperResult);
		return "/moc/question/oldexam";
	}
}
